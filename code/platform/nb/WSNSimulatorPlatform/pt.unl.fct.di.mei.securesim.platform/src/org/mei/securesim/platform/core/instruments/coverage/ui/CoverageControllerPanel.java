/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CoverageControllerPanel.java
 *
 * Created on 20/Jun/2010, 21:42:44
 */
package org.mei.securesim.platform.core.instruments.coverage.ui;

import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Action;
import org.mei.securesim.components.instruments.coverage.CoverageController;
import org.mei.securesim.components.instruments.coverage.CoverageController.StatisticEntry;
import org.mei.securesim.core.nodes.Node;
import org.mei.securesim.components.instruments.IControlPanel;
import org.mei.securesim.components.instruments.SimulationController;
import org.mei.securesim.components.simulation.Simulation;
import org.mei.securesim.core.engine.Simulator;
import org.mei.securesim.platform.utils.gui.GUI_Utils;

/**
 *
 * @author CIAdmin
 */
public class CoverageControllerPanel extends javax.swing.JPanel implements IControlPanel {

    static CoverageControllerPanel instance;
    Thread chartThread;

    public static CoverageControllerPanel getInstance() {
        if (instance == null) {
            instance = new CoverageControllerPanel();
        }
        return instance;
    }

    /** Creates new form CoverageControllerPanel */
    public CoverageControllerPanel() {
        initComponents();
        loadDataFromController();
        CoverageController.getInstance().setControlPanel(this);
        chartPanel1.setChartName("Total Coverage");
        chartPanel1.setxLabel("Seconds");
        chartPanel1.setyLabel("Coverage Rate");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        tbtnEnable = new javax.swing.JToggleButton();
        tbtnRun = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sourceNodesTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        destinationNodesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNrSourceNodes = new javax.swing.JLabel();
        lblNrDestNodes = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        nrMsgRepetitions = new javax.swing.JFormattedTextField();
        btnApply = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        intervalBetweenMsg = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        chartPanel1 = new org.mei.securesim.platform.core.charts.ui.ChartPanel();

        setMaximumSize(new java.awt.Dimension(416, 100));
        setMinimumSize(new java.awt.Dimension(416, 100));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(416, 100));
        setLayout(new java.awt.BorderLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.mei.securesim.platform.PlatformApp.class).getContext().getResourceMap(CoverageControllerPanel.class);
        jLabel1.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel1.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel1.setName("jLabel1"); // NOI18N
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 40));
        add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new java.awt.BorderLayout());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(org.mei.securesim.platform.PlatformApp.class).getContext().getActionMap(CoverageControllerPanel.class, this);
        tbtnEnable.setAction(actionMap.get("SetCoverageStatus")); // NOI18N
        tbtnEnable.setIcon(resourceMap.getIcon("tbtnEnable.icon")); // NOI18N
        tbtnEnable.setText(resourceMap.getString("tbtnEnable.text")); // NOI18N
        tbtnEnable.setToolTipText(resourceMap.getString("tbtnEnable.toolTipText")); // NOI18N
        tbtnEnable.setFocusable(false);
        tbtnEnable.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtnEnable.setName("tbtnEnable"); // NOI18N
        tbtnEnable.setSelectedIcon(resourceMap.getIcon("tbtnEnable.selectedIcon")); // NOI18N
        tbtnEnable.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(tbtnEnable);

        tbtnRun.setAction(actionMap.get("RunTotalCoverageAnalisysAction")); // NOI18N
        tbtnRun.setIcon(resourceMap.getIcon("tbtnRun.icon")); // NOI18N
        tbtnRun.setText(resourceMap.getString("tbtnRun.text")); // NOI18N
        tbtnRun.setToolTipText(resourceMap.getString("tbtnRun.toolTipText")); // NOI18N
        tbtnRun.setFocusable(false);
        tbtnRun.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtnRun.setName("tbtnRun"); // NOI18N
        tbtnRun.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(tbtnRun);

        jButton1.setAction(actionMap.get("RefreshCoverageControllerInfoAction")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setName("jButton1"); // NOI18N
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton1);

        jPanel2.add(jToolBar1, java.awt.BorderLayout.NORTH);

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(59, 44));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(59, 44));

        jPanel3.setName("jPanel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        sourceNodesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Node Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        sourceNodesTable.setName("sourceNodesTable"); // NOI18N
        jScrollPane1.setViewportView(sourceNodesTable);
        sourceNodesTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("sourceNodesTable.columnModel.title0")); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        destinationNodesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Node ID", "Sent Msgs", "Received Msgs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        destinationNodesTable.setName("destinationNodesTable"); // NOI18N
        jScrollPane2.setViewportView(destinationNodesTable);
        destinationNodesTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("destinationNodesTable.columnModel.title0")); // NOI18N
        destinationNodesTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("destinationNodesTable.columnModel.title1")); // NOI18N
        destinationNodesTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("destinationNodesTable.columnModel.title2")); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        lblNrSourceNodes.setFont(resourceMap.getFont("lblNrDestNodes.font")); // NOI18N
        lblNrSourceNodes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNrSourceNodes.setText(resourceMap.getString("lblNrSourceNodes.text")); // NOI18N
        lblNrSourceNodes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNrSourceNodes.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblNrSourceNodes.setName("lblNrSourceNodes"); // NOI18N

        lblNrDestNodes.setFont(resourceMap.getFont("lblNrDestNodes.font")); // NOI18N
        lblNrDestNodes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNrDestNodes.setText(resourceMap.getString("lblNrDestNodes.text")); // NOI18N
        lblNrDestNodes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblNrDestNodes.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lblNrDestNodes.setName("lblNrDestNodes"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNrSourceNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(lblNrDestNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNrSourceNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNrDestNodes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                    .addGap(43, 43, 43)))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        nrMsgRepetitions.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        nrMsgRepetitions.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nrMsgRepetitions.setText(resourceMap.getString("nrMsgRepetitions.text")); // NOI18N
        nrMsgRepetitions.setName("nrMsgRepetitions"); // NOI18N

        btnApply.setAction(actionMap.get("updateDataFromController")); // NOI18N
        btnApply.setText(resourceMap.getString("btnApply.text")); // NOI18N
        btnApply.setName("btnApply"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        intervalBetweenMsg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        intervalBetweenMsg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        intervalBetweenMsg.setName("intervalBetweenMsg"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnApply)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(intervalBetweenMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(nrMsgRepetitions, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nrMsgRepetitions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(intervalBetweenMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                .addComponent(btnApply)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.BorderLayout());

        chartPanel1.setName("chartPanel1"); // NOI18N

        javax.swing.GroupLayout chartPanel1Layout = new javax.swing.GroupLayout(chartPanel1);
        chartPanel1.setLayout(chartPanel1Layout);
        chartPanel1Layout.setHorizontalGroup(
            chartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 411, Short.MAX_VALUE)
        );
        chartPanel1Layout.setVerticalGroup(
            chartPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        jPanel1.add(chartPanel1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    public void RefreshCoverageControllerInfoAction() {

        DefaultTableModel sourceModel = (DefaultTableModel) sourceNodesTable.getModel();
        for (int i = sourceModel.getRowCount() - 1; i >= 0; i--) {
            sourceModel.removeRow(i);
        }
        for (Object object : CoverageController.getInstance().getSourcesNodes()) {
            Node n = (Node) object;
            sourceModel.addRow(new Short[]{n.getId()});
        }

        DefaultTableModel destinationModel = (DefaultTableModel) destinationNodesTable.getModel();
        for (int i = destinationModel.getRowCount() - 1; i >= 0; i--) {
            destinationModel.removeRow(i);
        }

        Hashtable t = CoverageController.getInstance().getStatistics();

        long sent = 0;
        long received = 0;
        for (Object object : CoverageController.getInstance().getDestinationNodes()) {
            Node n = (Node) object;
            CoverageController.StatisticEntry e = (StatisticEntry) t.get(n.getId());
            if (e == null) {
                destinationModel.addRow(new Object[]{(Short) n.getId(), 0, 0});
            } else {
                sent = e.getSentMessages();
                received = e.getReceivedMessages();
                destinationModel.addRow(new Object[]{(Short) n.getId(), sent, received});
                long rate = received * 100 / sent;
                chartPanel1.updateChart(SimulationController.getInstance().getCurrentSimulationTime() , rate);
            }

        }
        lblNrDestNodes.setText(CoverageController.getInstance().getDestinationNodes().size() + " Nodes");
        lblNrSourceNodes.setText(CoverageController.getInstance().getSourcesNodes().size() + " Nodes");
    }

    @Action
    public void SetCoverageStatus() {
        CoverageController.getInstance().setEnable(tbtnEnable.isSelected());
    }

    @Action
    public void RunTotalCoverageAnalisysAction() {
        try {
            if (!CoverageController.getInstance().isEnable()) {
                GUI_Utils.showMessage("Coverage instrument is not enabled!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            CoverageController.getInstance().startTotalCoverageAnalisys();

            chartThread = new Thread(new Runnable() {

                public void run() {
                    while (true) {
                        try {
                            RefreshCoverageControllerInfoAction();
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(CoverageControllerPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    
                }
            });
            chartThread.start();

        } catch (Exception ex) {
            Logger.getLogger(CoverageControllerPanel.class.getName()).log(Level.SEVERE, null, ex);
            GUI_Utils.showException(ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApply;
    private org.mei.securesim.platform.core.charts.ui.ChartPanel chartPanel1;
    private javax.swing.JTable destinationNodesTable;
    private javax.swing.JFormattedTextField intervalBetweenMsg;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblNrDestNodes;
    private javax.swing.JLabel lblNrSourceNodes;
    private javax.swing.JFormattedTextField nrMsgRepetitions;
    private javax.swing.JTable sourceNodesTable;
    private javax.swing.JToggleButton tbtnEnable;
    private javax.swing.JButton tbtnRun;
    // End of variables declaration//GEN-END:variables

    private void loadDataFromController() {
        nrMsgRepetitions.setValue(CoverageController.getInstance().getRepetitionsPerNode());
        intervalBetweenMsg.setValue(CoverageController.getInstance().getMessageIntervalPerNode());
    }

    @Action
    public void updateDataFromController() {
        CoverageController.getInstance().setRepetitionsPerNode(Integer.valueOf(nrMsgRepetitions.getText()));
        CoverageController.getInstance().setMessageIntervalPerNode(Integer.valueOf(intervalBetweenMsg.getText()));
    }

    public synchronized void refresh() {
        RefreshCoverageControllerInfoAction();
    }
}
