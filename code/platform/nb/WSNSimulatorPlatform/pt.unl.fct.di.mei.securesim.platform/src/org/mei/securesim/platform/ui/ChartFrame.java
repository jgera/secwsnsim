/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ChartFrame.java
 *
 * Created on Feb 23, 2010, 11:17:44 AM
 */
package org.mei.securesim.platform.ui;

import java.awt.BorderLayout;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.mei.securesim.platform.charts.ui.ChartPanel;

/**
 *
 * @author posilva
 */
public class ChartFrame extends javax.swing.JFrame {

    protected ChartPanel chartPanel;

    public ChartPanel getChartPanel() {
        return chartPanel;
    }

    /** Creates new form ChartFrame */
    public ChartFrame() {
        initComponents();
        chartPanel = new ChartPanel();
        getContentPane().add(chartPanel, BorderLayout.CENTER);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        mnuExportar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.mei.securesim.platform.PlatformApp.class).getContext().getResourceMap(ChartFrame.class);
        mnuExportar.setText(resourceMap.getString("mnuExportar.text")); // NOI18N
        mnuExportar.setFocusable(false);
        mnuExportar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mnuExportar.setName("mnuExportar"); // NOI18N
        mnuExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        mnuExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportarActionPerformed(evt);
            }
        });
        jToolBar1.add(mnuExportar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportarActionPerformed
        try {
        JFileChooser fc = new JFileChooser(".");
        int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                chartPanel.getChartObject().saveChartToPDF(fc.getSelectedFile().getAbsolutePath(), 800, 600);
            }
        } catch (Exception ex) {
            Logger.getLogger(ChartFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnuExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ChartFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton mnuExportar;
    // End of variables declaration//GEN-END:variables
    private double xval=0;


    class GThread extends Thread {

        @Override
        public void run() {
            Random r = new Random();
            for (int i = 0; i < 100; i++) {
                try {
                    
                    double y = (r).nextDouble() * 100;
                    chartPanel.updateChart(xval, y);
                    xval+=0.1;
                    sleep(500+(long)r.nextDouble()*1000);
                } catch (InterruptedException ex) {
                   // Logger.getLogger(ChartFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }
}
