\chapter{Plataforma para avaliação de protocolos de encaminhamento de dados em
RSSF}\label{cap:Plataforma}

Tendo sido abordadas as temáticas relacionadas com a problemática da segurança
numa RSSF e os aspectos que concorrem para o seu estudo, nomeadamente no que se
refere a ambientes de simulação, neste capítulo apresenta-se a arquitectura da
plataforma de simulação desenvolvida no âmbito deste trabalho. Esta
plataforma tem como principal objectivo a agilização do desenho de
topologias de RSSF, integrando unidades modulares que permitam a
sistematização do processo de análise de protocolos de encaminhamento, antes e
depois de serem sujeitos a ataques. Esta análise tem em vista o estudo
destes protocolos no que se refere a propriedades de fiabilidade, latência,
cobertura da rede e consumo de energia.

\section{Consolidação da avaliação do simulador JProwler e a sua
integração}\label{sec:elab_aval_amb_sim}
Na concepção da plataforma de simulação, desde logo foi assumida a necessidade 
de não ser uma solução \textit{from the scratch}, pelo que a decisão passou por
estabelecer como ponto de partida um sistema de simulação já existente. Assim
sendo, e tendo sido apresentados os ambientes tidos em conta para este estudo,
as hipóteses iam desde a implementação de módulos de avaliação de segurança em
simuladores mais evoluídos, obrigando a um estudo aprofundado da
arquitectura de cada simulador, até à alteração profunda e adaptação dos
simuladores a ambientes de RSSF, por forma a simular o comportamento dos
sensores durante a sua operação. 

Perante este cenário e tendo em conta os objectivos da plataforma que se
pretendeu desenvolver, principalmente com o objectivo de integrar componentes
orientados para uma avaliação de propriedades de segurança e da forma como estas
afectam os  protocolos de encaminhamento a
decisão foi a utilização do simulador JProwler \cite{jprowler}. Esta escolha
deveu-se, fundamentalmente, ao facto de este simulador ter um comportamento
muito semelhante ao de uma rede de sensores, uma vez que foi implementado na
tentativa de se aproximar o mais possível do sistema TinyOS \cite{tinyos} em
particular simulando as plataformas Mica2 \cite{mica2}.

O facto do JProwler apresentar uma estrutura minimalista e simples facilitou o
entendimento do seu funcionamento e, com isto, a identificação de  cada
componente envolvido na simulação, com vista à sua reutilização/extensão para a
incorporação das diversas funcionalidades que se planearam  implementar na
plataforma. Uma das vantagens da simplicidade do simulador recai sobre a
necessidade que existe de interceptar determinados eventos que ocorrem durante a
simulação, por forma a permitir a sua medição. Um exemplo é a necessidade de
interceptar o envio e a recepção de mensagens com o intuito de medir os consumos
energéticos destas operações.
\subsection[Arquitectura do simulador JProwler]{Arquitectura do simulador
JProwler} 
\input{pic_sim_jprowler_cd}
O simulador base, JProwler \cite{jprowler}, é composto por um conjunto de nove
 classes que são representadas na \figurename{\ref{fig:jprowler_cd}}. Este
simulador está estruturado em três grupos de funções: a) Motor de simulação, que
representa o ambiente de operação de uma RSSF, caracterizado pelo gerador de
eventos discretos e modelos de rádio (Simulator, Event, RadioModel); b)
Plataformas de execução, que simulam o comportamento dos nós sensores (Node,
Mica2Node, Application); c) Visualização, permitindo observar a topologia da
rede.

Para utilizar este simulador no estudo de um protocolo de encaminhamento,
tal como existe actualmente, é necessário implementar uma classe derivada de
Application com a lógica do protocolo. A implementação de uma plataforma sensor,
disponibilizada no JProwler\cite{jprowler}, é monolítica, ou seja, não observa
uma
divisão por camadas, como a apresentada em \cite{VERCITACAODAPILHA}. É certo
que nas plataformas físicas se observa uma forte afinidade entre as camadas do
sensor pois, em alguns casos, ao nível aplicação é necessário ter acesso a
dados da camada MAC ou transporte, de modo a facilitar o controlo do estado da
aplicação.

Este simulador não incorpora algumas das funcionalidades que se consideram 
interessantes de observar, de forma genérica, quando se pretende avaliar um
protocolo de encaminhamento seguro em RSSF. Um exemplo é a capacidade de ter uma
visão do consumo de energia da rede durante uma simulação e poder observar o seu
impacte durante a operação normal e durante a operação sujeita a um qualquer
ataque. 

\subsection[Funcionamento do simulador JProwler]{Funcionamento do simulador
JProwler} 
Como já foi referido, o simulador procura ir ao encontro do funcionamento dos 
\textit  {motes} Mica2 \cite{mica2_datasheet}, com o sistema de eventos
implementado pelo TinyOS \cite{tinyos}. Neste sistema, em cada momento apenas
está
a ser tratada uma mensagem, o que faz com que,  caso cheguem várias
mensagens ao mesmo tempo, algumas mensagens se possam perder. O modelo de rádio
preconiza um mecanismo de \textit{backoff} em caso de falha na transmissão. A
introdução de ruído (o qual permite aproximar-se do comportamento de uma rede
real) é materializada com base numa distribuição de
Gauss. A existência de uma pilha de eventos que executa um conjunto de eventos
em cada iteração permite simular a ocorrência de diversos eventos em diferentes
pontos da rede, ao mesmo tempo.
\input{pic_jprowler}
A interface gráfica disponibilizada apenas permite a visualização dos nós 
sensores e a obtenção de alguma informação referente ao estado da transmissão,
materializada por um código de cores. A possibilidade de dispor um determinado
nó sensor de forma orientada, com recurso a um sistema \textit{drag-and-drop}
não se encontra disponível. A distribuição dos nós na área de trabalho é
realizado de forma aleatória, permitindo obter uma rede com alguma homogeneidade
no que
respeita à distribuição dos sensores pela área. A implementação dos sensores,
não preconiza a existência de diversos estados de operação dos sensores à
semelhança do que se observa ao nível da gestão de energia de um sensor
durante o seu ciclo de vida, com os estados, por exemplo, activo, inactivo e
adormecido. Estes estados são, normalmente, geridos ao nível MAC, dependendo dos
protocolos que cada sensor implementa.\cite{SMAC, BMAC}

\section{Arquitectura da plataforma de simulação}
\label{sec:apresent_arch}

Para melhor percepção da arquitectura da plataforma de simulação, esta é 
apresentada sob a  forma de uma pilha de serviços. Como se
pode ver na \figurename{ \ref{fig:sim_arch}}, os principais serviços são: 
i) Simulador base ou motor de simulação; ii) Camada de Instrumentação e Teste;
iii) API para a implementação e avaliação de protocolos de encaminhamento; iv)
Consola de visualização e controlo de simulação.

\input{pic_sim_arch}
\subsection[Simulador base ou motor de simulação]{Simulador base ou motor de
simulação}
Como já foi referido, o motor de simulação resulta da extensão do simulador 
JProwler. De uma forma geral, o simulador já implementa os modelos base de uma
RSSF, nomeadamente no que respeita ao modelo de acesso ao meio e ao modelo
rádio. 
\subsection{Mecanismo de Configuração}\label{sec:impl_conf}
Para dotar a plataforma de maior flexibilidade, a existência de um componente
 gestor de configurações revela-se importante. Este componente é transversal a
toda a plataforma, uma vez que os componentes que são passíveis de configuração
contêm lógica associada para que as parametrizações possam ser persistentes e
portáveis. Foi adoptada a tecnologia XML para a definição dos ficheiros de
configuração das simulações. Os ficheiros de configuração da plataforma são
implementados usando ficheiros de \textit{Properties} do Java. As principais
funcionalidades vão desde as configurações dos parâmetros do simulador base, até
à configuração de cada uma das simulações e dos seus componentes, como forma de
possibilitar a repetição de experiências nas mesmas condições.

\subsection[Camada de instrumentação]{Camada de instrumentação}
Esta camada contém um conjunto de ferramentas que controlam a simulação, 
nomeadamente no que respeita aos mecanismos principais que se pretenderam
implementar na plataforma: 
\subsubsection{Mecanismo de Geração de Topologias}\label{sec:impl_topo}
As RSSF, normalmente, são caracterizadas por diferentes formas de distribuição
dos nós sensores. Estas distribuições podem ser essencialmente divididas em dois modelos:
aleatório e estruturado. Sabe-se que, de facto, a
topologia da rede pode influenciar o comportamento de um protocolo de
encaminhamento. No sentido de permitir a análise do impacte de
diferentes topologias nos protocolo, a plataforma dispõe de um componente cuja
função é gerar/desenhar topologias de rede. 

A plataforma oferece, de forma automática, a geração de três tipos de
topologias: 1) aleatória, delimitada pela área seleccionada; 2) em grelha,
mediante a introdução da distância entre cada sensor, também numa área
delimitada; 3) orientada, posicionado o cursor onde se pretende adicionar um
sensor. Os primeiros dois modos permitem estabelecer uma primeira
distribuição, que seguidamente pode ser ajustada manualmente, de modo a desenhar
uma topologia estruturada específica, através da introdução
orientada de sensores, como é o exemplo da estação base. A remoção de sensores
também é disponibilizada como forma de customização de topologias podendo
criar-se, por exemplo, zonas sem sensores para testar determinada topologia. 
\input{pic_topologias}
Este componente possibilita a sua extensão para adição de novas
topologias, geradas de forma automática (específicas para determinada
simulação/avaliação). Uma vez que se pretende possibilitar o estudo
comparativo de protocolos está dotado de um mecanismo de persistência que
possibilita a reutilização de determinadas topologias, em diferentes
experiências.

\subsubsection{Mecanismo de Gestão de Consumo de Energia}
\label{sec:impl_energia}
Este é um dos componentes de maior importância, uma vez que um dos
indicadores que se pretende observar na análise de protocolos de encaminhamento 
é o impacte sobre o tempo útil de operação da rede, quer em condições de
funcionamento normais, quer  em condições de ataque efectivo, tempo este que
está dependente da energia. 
A energia é um recurso escasso numa RSSF. Para a implementação de mecanismos de 
segurança, é necessário recorrer a maior computação, transmissão de dados de
forma segura e capacidade de verificação de determinadas propriedades de
segurança. 

Sendo reconhecida a importância desta ferramenta, os princípios
orientadores para a sua implementação foram:i) Tornar a expressividade destes
consumos na lógica dos protocolos o mais transparente possível; ii) Adoptar um
modelo o mais próximo possível da realidade, principalmente no que refere aos
consumos de cada operação de um nó sensor; iii) Parametrização do modelo de
energia por forma a permitir a calibração o mais próxima do valores reais; iv)
Capacidade para analisar em pós-processamento os dados resultantes da análise
de consumo energético, para a elaboração de gráficos representativos dos
resultados obtidos; v) Capacidade de, em tempo real, prever os perfis de
consumo.
\input{pic_energia}
Na \figurename\ \ref{fig:energy} é possível observar, em primeiro lugar, o
consumo de um nó específico, em função do tempo. Em segundo lugar, observa-se o
estado global da bateria de um conjunto de sensores. Esta visualização contribuí
para a afinação da análise e dos testes, nomeadamente nas experiências que
possuam execuções mais longas. No fundo, permite a antevisão dos comportamentos
dos protocolos, no que respeita a perfis de consumo de energia. 

\subsubsection{Mecanismo de Injecção de Falhas /Ataques}
\label{sec:impl_ataques}
Para que se possa avaliar a segurança nos protocolos de encaminhamento é
necessário sujeita-los a ataques que possam expor as suas vulnerabilidades e
as suas capacidades de mitigar os efeitos dos atacantes. A não-existência de um
simulador que permita a indução de ataques de forma generalista evidencia a
pertinência deste componente como factor diferenciador desta plataforma face a
outras existentes. Das características que se podem encontrar neste componente
evidenciam-se as seguintes:
i) Componente flexível permitindo adaptar-se à lógica de cada algoritmo; ii)
permite a visualização do código malicioso em tempo de execução, por forma a
perceber comportamentos dos protocolos face ao ataque; iii) Permite acrescentar
mais modelos de ataques, dos já tipificados neste relatório ou de outros que
venham a ser identificados.

Com o mecanismo de injecção de ataques procura-se tornar o mais intuitiva
possível a sua utilização, baseando-se numa API simples e genérica. A integração
com a consola de visualização permite identificar visualmente os sensores
maliciosos face aos outros sensores. Assim, também é possível activar o modo de
ataque em cada um dos sensores, bem como seleccionar o ataque que se pretende
observar, podendo coexistir diversos ataques. No entanto, está limitada à
operação de apenas um ataque de cada vez em cada sensor. No que se refere a
avaliação, é possível medir o impacte do ataque pelo número de mensagens que
atravessam os nós atacantes, ou pela observação do impacte nas propriedades
observadas no âmbito deste trabalho.
\input{pic_ataques}
\subsubsection{Mecanismo de Avaliação e Execução de Testes}
Uma vez que só se consegue avaliar o que é possível medir, foi necessário
proceder-se ao desenvolvimento de ferramentas de medição das propriedades, para
além do consumo de energia, que se pretende observar em cada um dos protocolos.
A cobertura da rede, a latência das comunicações e a fiabilidade da rede são
as propriedades principais para as quais foi necessário implementar componentes
específicos para avaliação em cada simulação ou experiência. Com a capacidade
de medir instalada, é necessário obter os resultados de cada medição.
Esta abstracção é representada por intermédio de um modelo parametrizável de
testes e da consequente recolha de resultados associados a cada teste. 

\paragraph[]{Módulo de Cobertura/Fiabilidade/Latência da Rede}
Mediante as tipologias de ataques estudadas, observa-se que algumas das
resultantes destes ataques são a possibilidade de criação de partições na rede,
a limitação nas comunicações de modo selectivo ou alteração total ou
parcial da informação de encaminhamento, resultando, em qualquer um dos casos,
na perda de dados e, com isto, o comprometimento da finalidade da aplicação.
Assim, interessa desde logo observar a capacidade de resistência de um protocolo
quando sujeito a determinados ataques e aferir qual o nível de disponibilidade
da rede durante estas fases. Não obstante este facto, a rede
deverá sempre ser medida, complementarmente, durante o seu funcionamento normal,
ou seja, não sujeito a ataques. Com este módulo, é possível medir as
propriedades
de cobertura, fiabilidade e latência da rede seguindo as seguintes as
definições:
\begin{description}
\item[Cobertura:] É entendida como a capacidade de um qualquer sensor da rede
conseguir comunicar com um qualquer outro sensor, utilizando o protocolo
de encaminhamento implementado. A análise resultante da observação
desta propriedade pode ser comparada com a cobertura física estabelecida pela
comunicação rádio. Interessa portanto realçar que apesar de todos os sensores de
uma rede estarem cobertos, em certa medida, por comunicação rádio, isso não é
condição suficiente para garantir a transmissão de dados de um qualquer
ponto A para um qualquer ponto B, uma vez que podem existir partições na rede,
sejam estas causadas por ataques ou por falhas energéticas dos sensores
fronteira de cada partição.

\item[Fiabilidade:] É entendida como a medida que avalia a qualidade da
comunicação face ao modo de transmissão, modo este que compreende toda a camada
de software utilizada na arquitectura de um sensor. Assim, o resultado da
análise desta medida indica o índice de qualidade de informação  que um
qualquer sensor pode enviar para outro. É medida tendo em conta o número de
mensagens enviadas, face às mensagens recebidas, entre quaisquer dois sensores
de uma rede (tipicamente um sensor gerador de eventos e uma estação base).
Alguns parâmetros podem ainda afectar os resultados observados como, por
exemplo, o número de retransmissões de cada mensagem e o intervalo de tempo
entre o envio de cada mensagem que, quando mal definidos, podem contribuir
para a perda de qualidade de comunicação na rede, pela sua saturação.

\item[Latência:] Tratando-se de redes, a latência é uma métrica
sempre a ter presente na sua análise. Esta medida pode ser efectuada
de duas formas: a) por tempo decorrido no envio de mensagens entre dois pontos;
b) por número de nós percorridos no envio de mensagens entre dois pontos. A
primeira pode ser difícil de medir, uma vez que se trata de um sistema simulado,
em que o factor tempo nem sempre tem a resolução que permite aferir com
rigor a qualidade desta medida. No segundo caso, o número de \textit{hops}
percorridos por uma mensagem pode ser uma medida bastante genérica e precisa,
que permite aferir esta propriedade da comunicação entre dois quaisquer pontos,
podendo-se depois extrapolar um valor estimado para o tempo decorrido
em função de uma largura de banda especificada. No entanto, se se pretender
avaliar a possibilidade de utilização de um protocolo em aplicações em que o
tempo de resposta é central (aplicações com características de tempo-real, não
muito comuns em RSSF), torna-se também importante considerar o tempo como
unidade de medida a avaliar.
\end{description}

A avaliação de um protocolo de encaminhamento preconiza a repetição de
baterias de testes e a variação de alguns parâmetros como base
de comparação de resultados. Desta forma podem-se observar tendências e
comportamentos da rede. O modelo de execução de testes e recolha de
resultados permite sistematizar a sua re-utilização face a
diversas distribuições de RSSF e protocolos implementados. Este componente do
simulador é importante, uma vez que permite agilizar o estudo e concentrar nas
experiências o foco da avaliação de um protocolo de encaminhamento de dados.
Assim sendo, compreende-se, como experiência, uma simulação com as seguintes
propriedades:
\begin{enumerate}
\item Topologia bem definida (aleatória, em grelha ou estruturada);
\item Protocolo de encaminhamento de dados;
\item Parametrização do modelo de energia;
\item Bateria de testes;
\item Ataques ao nível do encaminhamento de dados;
\end{enumerate}

Estas propriedades permitem sistematizar a avaliação de um qualquer protocolo
de encaminhamento de dados, seja ele seguro ou não. Para avaliar quaisquer
protocolos é possível cruzar estas propriedades de diversas formas e comparar os
resultados com uma abordagem metódica. O que se observa em alguns
simuladores é que a forma de implementação dos testes é diferente em cada
protocolo, o que pode levar a diferenças que influenciem os resultados. Com a
definição destes critérios e da metodologia genérica de avaliação de protocolos,
é possível, efectivamente, ter a mesma base de comparação para protocolos
diferentes, permitindo afinar as conclusões no que concerne ao seu
comportamento. Esta abordagem transforma-se assim num contributo de inovação
para o estudo de protocolos de encaminhamento em RSSF, observando também as
características de segurança.

\subsection{Consola de Visualização e Controlo de Simulação}
\label{sec:impl_visual}
Como componente integrador de toda a plataforma, foi desenvolvida, uma consola
de operação que permite interagir com o simulador de forma intuitiva e fácil,
simplificando o processo de experimentação durante todo o seu ciclo. Como tal,
foi implementado um componente de visualização gráfica de toda
a simulação, com capacidade de controlo de parâmetros de execução e
configuração e obtenção de resultados da execução de testes.
\input{pic_simulator}
A \figurename \ \ref{fig:simulador_view} apresenta uma imagem do simulador
durante a execução, expondo algumas das funcionalidades disponíveis para a
avaliação de protocolos. 
\subsection{API para implementação de protocolos de encaminhamento}
Uma vez que o ponto de partida da plataforma é uma simulador que respeita uma
API, com a integração de novas funcionalidades, com características de 
avaliação em diferentes camadas do \textit{software} das plataformas
sensoriais, surge um conjunto de interfaces que garantem a inter-operação entre
os protocolos e o simulador, facilitando a medição das propriedades já
indicadas.
No capítulo seguinte é possível observar alguns destes interfaces que tornam a
utilização de algumas funcionalidades o mais transparente possível, por forma a
permitir o mesmo tipo de acções de avaliação, que contribuem para uma melhor
sistematização da análise entre diversas implementações de protocolos.\\
\section{Metodologia de utilização da plataforma}
Pretende-se com esta plataforma contribuir para uma metodologia de avaliação de
protocolos de encaminhamento facilitando, principalmente, a comparação de
diferentes protocolos. Assim, assumiu-se desde cedo a necessidade de
estabelecer um modelo de utilização da plataforma, modelo este que não é
obrigatório para a realização de avaliações com esta ferramenta. No
entanto, este modelo foi utilizado na prova de conceito, tendo-se constatado
que facilita uma abordagem iterativa de análise. com vista a melhorar/refinar
os resultados
obtidos.
Esta metodologia desenvolve-se por três fases, que serão descritas
sumariamente de seguida, sendo que a segunda e terceira fase podem ser
realizadas uma vez e usadas
em diferentes protocolos, estabelecendo-se logo como uma base de comparação
para outros protocolos que se pretenda estudar.
\subsection{Implementação de protocolo}
Esta fase compreende a implementação da especificação do protocolo em estudo. A
utilização das facilidades disponibilizadas pela API e o cumprimento dos
interfaces requeridos para a instrumentação do simulador representam as únicas
obrigatoriedades na implementação. Uma vez feito isto, algumas funcionalidades
apresentam-se disponíveis sem que se tenha feito qualquer esforço
adicional, como é o caso, por exemplo, dos consumos energéticos de transmissão,
recepção e mudança de estados dos sensores. 
%No \chaptername{
%\ref{cap:implementacao}} serão apresentados mais detalhes quanto a esta fase.
\subsection{Caracterização do ambiente de simulação}
A caracterização do ambiente de simulação refere-se, essencialmente, ao ambiente
de operação que se pretende estudar. A definição de características de operação(
como por exemplo, alcance rádio, topologias de rede, atenuação
radio ambiental, altitude do terreno e definição de nós base e a sua
localização) permite estabelecer um modelo de simulação que persiste entre
diferentes experiências, retirando algum custo de configuração e permitindo uma
abordagem incremental pela realização de pequenos ajustes decorrentes da
observação de resultados na presença de comportamentos não esperados.
\subsection{Execução/análise de testes e
resultados}\label{sec:ss_exec_tests_results}
A realização de testes, através do envio de mensagens em nós distintos da rede,
foi a abordagem metodológica estabelecida para a avaliação de um protocolo de
encaminhamento em RSSF. Seguindo o princípio de comparação entre diversos
protocolos a persistência destes testes permite  a criação de baterias
específicas de testes, que concorrem para o melhoramento da análise e para a
construção de uma base de comparação para futuras implementações.
Os parâmetros existentes num teste são os seguintes:
\begin{itemize}
 \item Número/\% de sensores emissores;
 \item Número/\% de sensores receptores;
 \item Número/\% de sensores atacantes;
 \item Número de mensagens enviadas;
 \item Intervalo de tempo entre cada envio;
 \item Número de retransmissões;
 \item Ataque activo.
\end{itemize}
A figura seguinte apresenta a janela que possibilita a especificação de testes,
tendo por base os parâmetros enunciados, podendo-se observar a facilidade
existente para tornar estes testes persistentes. Uma vez executado o teste
importa observar os resultados, por forma a coligi-los para análise gráfica dos
dados.
\input{pic_results}
\input{pic_tests}
Com este modelo de testes, representados na
\figurename{\ref{fig:simulador_view}} e na \figurename{\ref{fig:results_view}}
entende-se ser possível sujeitar os protocolos a
condições que permitem levar a cabo a medição em cada topologia e em cada
ataque, por forma a facilitar o seu estudo e a sistematizar as experiências. Uma
vez que a implementação de toda a plataforma foi realizada em Java será sempre
possível
estender as funcionalidades de maneira a incorporar novos modelos de
avaliação e
novas abordagens ou metodologias que enriqueçam o estudo das RSSF, nomeadamente
no que concerne à problemática da segurança de protocolos de encaminhamento de
dados. 

%\subsubsection{Avaliação da Solução}\label{sec:aval_solucao}
%Uma vez que a contribuição efectiva para a componente de investigação de
%protocolos de encaminhamento seguros em RSSF será obtida com a concepção de uma
%plataforma de
%simulação que suporte o estudo e a análise desta problemática, importa
%sujeitá-la a uma avaliação
%primária que permita comprovar a sua utilidade e/ou identificar eventuais
%lacunas neste domínio.
%Assim, tendo esta avaliação em vista, pretende-se contribuir com o estudo dos
%protocolos de
%encaminhamento seguro Clean-Slate e INSENS. Para isso, definem-se duas fases
%complementares na
%elaboração da tese: uma que visa a implementação de um protocolo simples, que
%permita aferir o
%correcto funcionamento da plataforma, e outra que vise a implementação dos dois
%protocolos referidos,
%que serão alvo de uma análise comparativa com recurso às funcionalidades da
%plataforma. 

\subsection{Utilização e exploração da plataforma
}\label{sec:ss_utilizacao_exploracao}

A plataforma apresentada encontra-se disponível, desde o inicio da sua
concepção, para a comunidade, sobre a forma de um projecto de código aberto,
acessível em \textbf{http://code.google.com/p/secwsnsim/}. Uma das vantagens
desta opção foi, sem dúvida a possibilidade de medir algum nível de aceitação
da plataforma junto da comunidade académica, nomeadamente alguns alunos no
estrangeiro ligados a esta área de investigação.

Apresenta-se seguidamente,a título de curiosidade, a taxa de acessos à página
por distribuição geográfica.\footnote{Dados extraídos da ferramenta 
Analytics da Google, na data referente no mapa}Com esta visibilidade foi
possível incorporar mais algumas funcionalidades que resultam de algumas
questões postas por utilizadores da plataforma.

